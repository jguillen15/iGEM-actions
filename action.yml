name: generate-distribution
description: A Github action to generate a distribution from user-readable files 
inputs:
  repo-token:
    description: The github token used to mange commiting and push
    required: true
    default: ${{ github.token }}
  secret-input:
    description: 'A secret input'
    required: true
runs:
    using: composite
    steps:
        - name: Check out this repository for building
          uses: actions/checkout@v3

        - name: Set up Python 3.9
          uses: actions/setup-python@v4
          with:
            python-version: 3.9

        - name: Set up Node.js 14
          uses: actions/setup-node@v3
          with:
            node-version: '14'

        - name: Install dependencies
          shell: bash
          run: |
            python -m pip install --upgrade pip
            pip install -r ${{ github.action_path }}/scripts/requirements.txt

        - name: Regularize directories
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/regularize_directories.py

        - name: Update CSVs
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/export_csvs.py

        - name: Update SBOL
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/export_sbol.py

        - name: Import parts and devices
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/import_parts.py

        - name: Convert SBOL2 imports to SBOL3
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/convert_sbol_2to3.py

        - name: Collate packages
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/collate_packages.py

        - name: Create vector build plans
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/expand_combinations.py

        - name: Debug - Print environment variables
          shell: bash
          run: env

        - name: Calculate complexity scores for composite parts
          shell: bash
          run: |
            echo "$SECRET_INPUT" > test_secret_idt_credentials.json
            python3 ${{ github.action_path }}/scripts/compute_complexity_scores.py
          env:
            SECRET_INPUT: ${{ inputs.secret-input }}

        - name: Generate markdown from packages
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/generate_markdown.py

        - name: Commit changes, ready to push 0
          shell: bash
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add *.nt *.md *.fasta *.gb README.md
            git add views/*
            git diff-index --quiet HEAD . || git commit -m "Automatically update exports 0"
        - name: Push changes 0
          uses: ad-m/github-push-action@master
          with:
            github_token: repo-token
            branch: ${{ github.ref }}

        - name: Build distribution
          shell: bash
          run: python3 ${{ github.action_path }}/scripts/build_distribution.py

        - name: Commit changes, ready to push
          shell: bash
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add *.nt *.md *.fasta *.gb README.md
            git add views/*
            git diff-index --quiet HEAD . || git commit -m "Automatically update exports"
        - name: Push changes
          uses: ad-m/github-push-action@master
          with:
            github_token: repo-token
            branch: ${{ github.ref }}

author: iGEM-Engineering
branding:
    icon:  'layers'
    color: 'purple'
